// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// model question with answers, a correct answer, and a question
model Question {
  id        Int      @id @default(autoincrement())
  question  String
  answers   String[]
  correct   Int
  sessionId Int 
  session Session @relation(fields: [sessionId], references: [id])
  playersAnswers PlayerChoice[]
}

// a session model, which is a collection of questions with a foreign key to a gameId
model Session {
  id        Int      @id @default(autoincrement())
  gameId    Int
  currQuestion Int  @default(0)
  questions Question[]
  game     Game @relation(fields: [gameId], references: [id])
}

//a player model, which has a color (string) and a gameId foreign key
model Player {
  id        Int      @id @default(autoincrement())
  username  String
  color     String
  gameId    Int
  game      Game @relation(fields: [gameId], references: [id]) 
  score    Int
  answers PlayerChoice[]
  // no two colors in same game
  @@unique([gameId, color])
}
model PlayerChoice {
  id Int @id @default(autoincrement())
  playerId Int
  questionId Int
  player Player @relation(fields: [playerId], references: [id])
  question Question @relation(fields: [questionId], references: [id])
  choice Int

  @@unique([playerId, questionId])
}
enum GameStatus {
  LOBBY
  INGAME
  SCORES
  FINISHED
}
model Game {
  id        Int      @id @default(autoincrement())
  status    GameStatus @default(LOBBY)
  url      String    @unique @default(uuid())
  currSession Int    @default(0)
  sessions  Session[]
  players   Player[]
}
